/*
    This file is part of the WebKit open source project.
    This file has been generated by generate-bindings.pl. DO NOT MODIFY!

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
    License as published by the Free Software Foundation; either
    version 2 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Library General Public License for more details.

    You should have received a copy of the GNU Library General Public License
    along with this library; see the file COPYING.LIB.  If not, write to
    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
    Boston, MA 02110-1301, USA.
*/

#include "config.h"
#include "JSDeprecatedCSSOMPrimitiveValue.h"

#include "JSDOMBinding.h"
#include "JSDOMConstructor.h"
#include "JSDOMConvert.h"
#include "JSDeprecatedCSSOMCounter.h"
#include "JSDeprecatedCSSOMRGBColor.h"
#include "JSDeprecatedCSSOMRect.h"
#include <runtime/Error.h>
#include <wtf/GetPtr.h>

using namespace JSC;

namespace WebCore {

// Functions

JSC::EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetFloatValue(JSC::ExecState*);
JSC::EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetFloatValue(JSC::ExecState*);
JSC::EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetStringValue(JSC::ExecState*);
JSC::EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetStringValue(JSC::ExecState*);
JSC::EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetCounterValue(JSC::ExecState*);
JSC::EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRectValue(JSC::ExecState*);
JSC::EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRGBColorValue(JSC::ExecState*);

// Attributes

JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrimitiveType(JSC::ExecState*, JSC::EncodedJSValue, JSC::PropertyName);
JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValueConstructor(JSC::ExecState*, JSC::EncodedJSValue, JSC::PropertyName);
bool setJSDeprecatedCSSOMPrimitiveValueConstructor(JSC::ExecState*, JSC::EncodedJSValue, JSC::EncodedJSValue);

class JSDeprecatedCSSOMPrimitiveValuePrototype : public JSC::JSNonFinalObject {
public:
    using Base = JSC::JSNonFinalObject;
    static JSDeprecatedCSSOMPrimitiveValuePrototype* create(JSC::VM& vm, JSC::JSGlobalObject* globalObject, JSC::Structure* structure)
    {
        JSDeprecatedCSSOMPrimitiveValuePrototype* ptr = new (NotNull, JSC::allocateCell<JSDeprecatedCSSOMPrimitiveValuePrototype>(vm.heap)) JSDeprecatedCSSOMPrimitiveValuePrototype(vm, globalObject, structure);
        ptr->finishCreation(vm);
        return ptr;
    }

    DECLARE_INFO;
    static JSC::Structure* createStructure(JSC::VM& vm, JSC::JSGlobalObject* globalObject, JSC::JSValue prototype)
    {
        return JSC::Structure::create(vm, globalObject, prototype, JSC::TypeInfo(JSC::ObjectType, StructureFlags), info());
    }

private:
    JSDeprecatedCSSOMPrimitiveValuePrototype(JSC::VM& vm, JSC::JSGlobalObject*, JSC::Structure* structure)
        : JSC::JSNonFinalObject(vm, structure)
    {
    }

    void finishCreation(JSC::VM&);
};

using JSDeprecatedCSSOMPrimitiveValueConstructor = JSDOMConstructorNotConstructable<JSDeprecatedCSSOMPrimitiveValue>;

/* Hash table for constructor */

static const HashTableValue JSDeprecatedCSSOMPrimitiveValueConstructorTableValues[] =
{
    { "CSS_UNKNOWN", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(0) } },
    { "CSS_NUMBER", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(1) } },
    { "CSS_PERCENTAGE", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(2) } },
    { "CSS_EMS", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(3) } },
    { "CSS_EXS", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(4) } },
    { "CSS_PX", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(5) } },
    { "CSS_CM", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(6) } },
    { "CSS_MM", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(7) } },
    { "CSS_IN", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(8) } },
    { "CSS_PT", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(9) } },
    { "CSS_PC", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(10) } },
    { "CSS_DEG", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(11) } },
    { "CSS_RAD", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(12) } },
    { "CSS_GRAD", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(13) } },
    { "CSS_MS", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(14) } },
    { "CSS_S", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(15) } },
    { "CSS_HZ", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(16) } },
    { "CSS_KHZ", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(17) } },
    { "CSS_DIMENSION", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(18) } },
    { "CSS_STRING", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(19) } },
    { "CSS_URI", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(20) } },
    { "CSS_IDENT", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(21) } },
    { "CSS_ATTR", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(22) } },
    { "CSS_COUNTER", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(23) } },
    { "CSS_RECT", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(24) } },
    { "CSS_RGBCOLOR", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(25) } },
    { "CSS_VW", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(26) } },
    { "CSS_VH", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(27) } },
    { "CSS_VMIN", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(28) } },
    { "CSS_VMAX", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(29) } },
};

static_assert(DeprecatedCSSOMPrimitiveValue::CSS_UNKNOWN == 0, "CSS_UNKNOWN in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_NUMBER == 1, "CSS_NUMBER in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_PERCENTAGE == 2, "CSS_PERCENTAGE in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_EMS == 3, "CSS_EMS in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_EXS == 4, "CSS_EXS in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_PX == 5, "CSS_PX in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_CM == 6, "CSS_CM in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_MM == 7, "CSS_MM in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_IN == 8, "CSS_IN in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_PT == 9, "CSS_PT in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_PC == 10, "CSS_PC in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_DEG == 11, "CSS_DEG in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_RAD == 12, "CSS_RAD in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_GRAD == 13, "CSS_GRAD in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_MS == 14, "CSS_MS in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_S == 15, "CSS_S in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_HZ == 16, "CSS_HZ in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_KHZ == 17, "CSS_KHZ in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_DIMENSION == 18, "CSS_DIMENSION in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_STRING == 19, "CSS_STRING in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_URI == 20, "CSS_URI in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_IDENT == 21, "CSS_IDENT in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_ATTR == 22, "CSS_ATTR in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_COUNTER == 23, "CSS_COUNTER in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_RECT == 24, "CSS_RECT in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_RGBCOLOR == 25, "CSS_RGBCOLOR in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_VW == 26, "CSS_VW in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_VH == 27, "CSS_VH in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_VMIN == 28, "CSS_VMIN in DeprecatedCSSOMPrimitiveValue does not match value from IDL");
static_assert(DeprecatedCSSOMPrimitiveValue::CSS_VMAX == 29, "CSS_VMAX in DeprecatedCSSOMPrimitiveValue does not match value from IDL");

template<> JSValue JSDeprecatedCSSOMPrimitiveValueConstructor::prototypeForStructure(JSC::VM& vm, const JSDOMGlobalObject& globalObject)
{
    return JSDeprecatedCSSOMValue::getConstructor(vm, &globalObject);
}

template<> void JSDeprecatedCSSOMPrimitiveValueConstructor::initializeProperties(VM& vm, JSDOMGlobalObject& globalObject)
{
    putDirect(vm, vm.propertyNames->prototype, JSDeprecatedCSSOMPrimitiveValue::prototype(vm, &globalObject), DontDelete | ReadOnly | DontEnum);
    putDirect(vm, vm.propertyNames->name, jsNontrivialString(&vm, String(ASCIILiteral("CSSPrimitiveValue"))), ReadOnly | DontEnum);
    putDirect(vm, vm.propertyNames->length, jsNumber(0), ReadOnly | DontEnum);
    reifyStaticProperties(vm, JSDeprecatedCSSOMPrimitiveValueConstructorTableValues, *this);
}

template<> const ClassInfo JSDeprecatedCSSOMPrimitiveValueConstructor::s_info = { "CSSPrimitiveValue", &Base::s_info, 0, CREATE_METHOD_TABLE(JSDeprecatedCSSOMPrimitiveValueConstructor) };

/* Hash table for prototype */

static const HashTableValue JSDeprecatedCSSOMPrimitiveValuePrototypeTableValues[] =
{
    { "constructor", DontEnum, NoIntrinsic, { (intptr_t)static_cast<PropertySlot::GetValueFunc>(jsDeprecatedCSSOMPrimitiveValueConstructor), (intptr_t) static_cast<PutPropertySlot::PutValueFunc>(setJSDeprecatedCSSOMPrimitiveValueConstructor) } },
    { "primitiveType", ReadOnly | CustomAccessor, NoIntrinsic, { (intptr_t)static_cast<PropertySlot::GetValueFunc>(jsDeprecatedCSSOMPrimitiveValuePrimitiveType), (intptr_t) static_cast<PutPropertySlot::PutValueFunc>(0) } },
    { "setFloatValue", JSC::Function, NoIntrinsic, { (intptr_t)static_cast<NativeFunction>(jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetFloatValue), (intptr_t) (0) } },
    { "getFloatValue", JSC::Function, NoIntrinsic, { (intptr_t)static_cast<NativeFunction>(jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetFloatValue), (intptr_t) (0) } },
    { "setStringValue", JSC::Function, NoIntrinsic, { (intptr_t)static_cast<NativeFunction>(jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetStringValue), (intptr_t) (0) } },
    { "getStringValue", JSC::Function, NoIntrinsic, { (intptr_t)static_cast<NativeFunction>(jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetStringValue), (intptr_t) (0) } },
    { "getCounterValue", JSC::Function, NoIntrinsic, { (intptr_t)static_cast<NativeFunction>(jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetCounterValue), (intptr_t) (0) } },
    { "getRectValue", JSC::Function, NoIntrinsic, { (intptr_t)static_cast<NativeFunction>(jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRectValue), (intptr_t) (0) } },
    { "getRGBColorValue", JSC::Function, NoIntrinsic, { (intptr_t)static_cast<NativeFunction>(jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRGBColorValue), (intptr_t) (0) } },
    { "CSS_UNKNOWN", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(0) } },
    { "CSS_NUMBER", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(1) } },
    { "CSS_PERCENTAGE", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(2) } },
    { "CSS_EMS", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(3) } },
    { "CSS_EXS", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(4) } },
    { "CSS_PX", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(5) } },
    { "CSS_CM", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(6) } },
    { "CSS_MM", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(7) } },
    { "CSS_IN", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(8) } },
    { "CSS_PT", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(9) } },
    { "CSS_PC", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(10) } },
    { "CSS_DEG", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(11) } },
    { "CSS_RAD", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(12) } },
    { "CSS_GRAD", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(13) } },
    { "CSS_MS", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(14) } },
    { "CSS_S", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(15) } },
    { "CSS_HZ", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(16) } },
    { "CSS_KHZ", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(17) } },
    { "CSS_DIMENSION", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(18) } },
    { "CSS_STRING", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(19) } },
    { "CSS_URI", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(20) } },
    { "CSS_IDENT", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(21) } },
    { "CSS_ATTR", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(22) } },
    { "CSS_COUNTER", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(23) } },
    { "CSS_RECT", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(24) } },
    { "CSS_RGBCOLOR", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(25) } },
    { "CSS_VW", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(26) } },
    { "CSS_VH", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(27) } },
    { "CSS_VMIN", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(28) } },
    { "CSS_VMAX", DontDelete | ReadOnly | ConstantInteger, NoIntrinsic, { (long long)(29) } },
};

const ClassInfo JSDeprecatedCSSOMPrimitiveValuePrototype::s_info = { "CSSPrimitiveValuePrototype", &Base::s_info, 0, CREATE_METHOD_TABLE(JSDeprecatedCSSOMPrimitiveValuePrototype) };

void JSDeprecatedCSSOMPrimitiveValuePrototype::finishCreation(VM& vm)
{
    Base::finishCreation(vm);
    reifyStaticProperties(vm, JSDeprecatedCSSOMPrimitiveValuePrototypeTableValues, *this);
}

const ClassInfo JSDeprecatedCSSOMPrimitiveValue::s_info = { "CSSPrimitiveValue", &Base::s_info, 0, CREATE_METHOD_TABLE(JSDeprecatedCSSOMPrimitiveValue) };

JSDeprecatedCSSOMPrimitiveValue::JSDeprecatedCSSOMPrimitiveValue(Structure* structure, JSDOMGlobalObject& globalObject, Ref<DeprecatedCSSOMPrimitiveValue>&& impl)
    : JSDeprecatedCSSOMValue(structure, globalObject, WTFMove(impl))
{
}

void JSDeprecatedCSSOMPrimitiveValue::finishCreation(VM& vm)
{
    Base::finishCreation(vm);
    ASSERT(inherits(info()));

}

JSObject* JSDeprecatedCSSOMPrimitiveValue::createPrototype(VM& vm, JSGlobalObject* globalObject)
{
    return JSDeprecatedCSSOMPrimitiveValuePrototype::create(vm, globalObject, JSDeprecatedCSSOMPrimitiveValuePrototype::createStructure(vm, globalObject, JSDeprecatedCSSOMValue::prototype(vm, globalObject)));
}

JSObject* JSDeprecatedCSSOMPrimitiveValue::prototype(VM& vm, JSGlobalObject* globalObject)
{
    return getDOMPrototype<JSDeprecatedCSSOMPrimitiveValue>(vm, globalObject);
}

template<> inline JSDeprecatedCSSOMPrimitiveValue* BindingCaller<JSDeprecatedCSSOMPrimitiveValue>::castForAttribute(ExecState&, EncodedJSValue thisValue)
{
    return jsDynamicDowncast<JSDeprecatedCSSOMPrimitiveValue*>(JSValue::decode(thisValue));
}

template<> inline JSDeprecatedCSSOMPrimitiveValue* BindingCaller<JSDeprecatedCSSOMPrimitiveValue>::castForOperation(ExecState& state)
{
    return jsDynamicDowncast<JSDeprecatedCSSOMPrimitiveValue*>(state.thisValue());
}

static inline JSValue jsDeprecatedCSSOMPrimitiveValuePrimitiveTypeGetter(ExecState&, JSDeprecatedCSSOMPrimitiveValue&, ThrowScope& throwScope);

EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrimitiveType(ExecState* state, EncodedJSValue thisValue, PropertyName)
{
    return BindingCaller<JSDeprecatedCSSOMPrimitiveValue>::attribute<jsDeprecatedCSSOMPrimitiveValuePrimitiveTypeGetter>(state, thisValue, "primitiveType");
}

static inline JSValue jsDeprecatedCSSOMPrimitiveValuePrimitiveTypeGetter(ExecState& state, JSDeprecatedCSSOMPrimitiveValue& thisObject, ThrowScope& throwScope)
{
    UNUSED_PARAM(throwScope);
    UNUSED_PARAM(state);
    auto& impl = thisObject.wrapped();
    JSValue result = toJS<IDLUnsignedShort>(impl.primitiveType());
    return result;
}

EncodedJSValue jsDeprecatedCSSOMPrimitiveValueConstructor(ExecState* state, EncodedJSValue thisValue, PropertyName)
{
    VM& vm = state->vm();
    auto throwScope = DECLARE_THROW_SCOPE(vm);
    JSDeprecatedCSSOMPrimitiveValuePrototype* domObject = jsDynamicDowncast<JSDeprecatedCSSOMPrimitiveValuePrototype*>(JSValue::decode(thisValue));
    if (UNLIKELY(!domObject))
        return throwVMTypeError(state, throwScope);
    return JSValue::encode(JSDeprecatedCSSOMPrimitiveValue::getConstructor(state->vm(), domObject->globalObject()));
}

bool setJSDeprecatedCSSOMPrimitiveValueConstructor(ExecState* state, EncodedJSValue thisValue, EncodedJSValue encodedValue)
{
    VM& vm = state->vm();
    auto throwScope = DECLARE_THROW_SCOPE(vm);
    JSValue value = JSValue::decode(encodedValue);
    JSDeprecatedCSSOMPrimitiveValuePrototype* domObject = jsDynamicDowncast<JSDeprecatedCSSOMPrimitiveValuePrototype*>(JSValue::decode(thisValue));
    if (UNLIKELY(!domObject)) {
        throwVMTypeError(state, throwScope);
        return false;
    }
    // Shadowing a built-in constructor
    return domObject->putDirect(state->vm(), state->propertyNames().constructor, value);
}

JSValue JSDeprecatedCSSOMPrimitiveValue::getConstructor(VM& vm, const JSGlobalObject* globalObject)
{
    return getDOMConstructor<JSDeprecatedCSSOMPrimitiveValueConstructor>(vm, *jsCast<const JSDOMGlobalObject*>(globalObject));
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetFloatValueCaller(JSC::ExecState*, JSDeprecatedCSSOMPrimitiveValue*, JSC::ThrowScope&);

EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetFloatValue(ExecState* state)
{
    return BindingCaller<JSDeprecatedCSSOMPrimitiveValue>::callOperation<jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetFloatValueCaller>(state, "setFloatValue");
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetFloatValueCaller(JSC::ExecState* state, JSDeprecatedCSSOMPrimitiveValue* castedThis, JSC::ThrowScope& throwScope)
{
    UNUSED_PARAM(state);
    UNUSED_PARAM(throwScope);
    auto& impl = castedThis->wrapped();
    auto unitType = convert<IDLUnsignedShort>(*state, state->argument(0), IntegerConversionConfiguration::Normal);
    RETURN_IF_EXCEPTION(throwScope, encodedJSValue());
    auto floatValue = convert<IDLUnrestrictedFloat>(*state, state->argument(1));
    RETURN_IF_EXCEPTION(throwScope, encodedJSValue());
    propagateException(*state, throwScope, impl.setFloatValue(WTFMove(unitType), WTFMove(floatValue)));
    return JSValue::encode(jsUndefined());
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetFloatValueCaller(JSC::ExecState*, JSDeprecatedCSSOMPrimitiveValue*, JSC::ThrowScope&);

EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetFloatValue(ExecState* state)
{
    return BindingCaller<JSDeprecatedCSSOMPrimitiveValue>::callOperation<jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetFloatValueCaller>(state, "getFloatValue");
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetFloatValueCaller(JSC::ExecState* state, JSDeprecatedCSSOMPrimitiveValue* castedThis, JSC::ThrowScope& throwScope)
{
    UNUSED_PARAM(state);
    UNUSED_PARAM(throwScope);
    auto& impl = castedThis->wrapped();
    auto unitType = convert<IDLUnsignedShort>(*state, state->argument(0), IntegerConversionConfiguration::Normal);
    RETURN_IF_EXCEPTION(throwScope, encodedJSValue());
    return JSValue::encode(toJS<IDLUnrestrictedFloat>(*state, throwScope, impl.getFloatValue(WTFMove(unitType))));
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetStringValueCaller(JSC::ExecState*, JSDeprecatedCSSOMPrimitiveValue*, JSC::ThrowScope&);

EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetStringValue(ExecState* state)
{
    return BindingCaller<JSDeprecatedCSSOMPrimitiveValue>::callOperation<jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetStringValueCaller>(state, "setStringValue");
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionSetStringValueCaller(JSC::ExecState* state, JSDeprecatedCSSOMPrimitiveValue* castedThis, JSC::ThrowScope& throwScope)
{
    UNUSED_PARAM(state);
    UNUSED_PARAM(throwScope);
    auto& impl = castedThis->wrapped();
    auto stringType = convert<IDLUnsignedShort>(*state, state->argument(0), IntegerConversionConfiguration::Normal);
    RETURN_IF_EXCEPTION(throwScope, encodedJSValue());
    auto stringValue = state->argument(1).isUndefined() ? String() : convert<IDLDOMString>(*state, state->uncheckedArgument(1), StringConversionConfiguration::Normal);
    RETURN_IF_EXCEPTION(throwScope, encodedJSValue());
    propagateException(*state, throwScope, impl.setStringValue(WTFMove(stringType), WTFMove(stringValue)));
    return JSValue::encode(jsUndefined());
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetStringValueCaller(JSC::ExecState*, JSDeprecatedCSSOMPrimitiveValue*, JSC::ThrowScope&);

EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetStringValue(ExecState* state)
{
    return BindingCaller<JSDeprecatedCSSOMPrimitiveValue>::callOperation<jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetStringValueCaller>(state, "getStringValue");
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetStringValueCaller(JSC::ExecState* state, JSDeprecatedCSSOMPrimitiveValue* castedThis, JSC::ThrowScope& throwScope)
{
    UNUSED_PARAM(state);
    UNUSED_PARAM(throwScope);
    auto& impl = castedThis->wrapped();
    return JSValue::encode(toJS<IDLDOMString>(*state, throwScope, impl.getStringValue()));
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetCounterValueCaller(JSC::ExecState*, JSDeprecatedCSSOMPrimitiveValue*, JSC::ThrowScope&);

EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetCounterValue(ExecState* state)
{
    return BindingCaller<JSDeprecatedCSSOMPrimitiveValue>::callOperation<jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetCounterValueCaller>(state, "getCounterValue");
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetCounterValueCaller(JSC::ExecState* state, JSDeprecatedCSSOMPrimitiveValue* castedThis, JSC::ThrowScope& throwScope)
{
    UNUSED_PARAM(state);
    UNUSED_PARAM(throwScope);
    auto& impl = castedThis->wrapped();
    return JSValue::encode(toJS<IDLInterface<DeprecatedCSSOMCounter>>(*state, *castedThis->globalObject(), throwScope, impl.getCounterValue()));
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRectValueCaller(JSC::ExecState*, JSDeprecatedCSSOMPrimitiveValue*, JSC::ThrowScope&);

EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRectValue(ExecState* state)
{
    return BindingCaller<JSDeprecatedCSSOMPrimitiveValue>::callOperation<jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRectValueCaller>(state, "getRectValue");
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRectValueCaller(JSC::ExecState* state, JSDeprecatedCSSOMPrimitiveValue* castedThis, JSC::ThrowScope& throwScope)
{
    UNUSED_PARAM(state);
    UNUSED_PARAM(throwScope);
    auto& impl = castedThis->wrapped();
    return JSValue::encode(toJS<IDLInterface<DeprecatedCSSOMRect>>(*state, *castedThis->globalObject(), throwScope, impl.getRectValue()));
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRGBColorValueCaller(JSC::ExecState*, JSDeprecatedCSSOMPrimitiveValue*, JSC::ThrowScope&);

EncodedJSValue JSC_HOST_CALL jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRGBColorValue(ExecState* state)
{
    return BindingCaller<JSDeprecatedCSSOMPrimitiveValue>::callOperation<jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRGBColorValueCaller>(state, "getRGBColorValue");
}

static inline JSC::EncodedJSValue jsDeprecatedCSSOMPrimitiveValuePrototypeFunctionGetRGBColorValueCaller(JSC::ExecState* state, JSDeprecatedCSSOMPrimitiveValue* castedThis, JSC::ThrowScope& throwScope)
{
    UNUSED_PARAM(state);
    UNUSED_PARAM(throwScope);
    auto& impl = castedThis->wrapped();
    return JSValue::encode(toJS<IDLInterface<DeprecatedCSSOMRGBColor>>(*state, *castedThis->globalObject(), throwScope, impl.getRGBColorValue()));
}


}
